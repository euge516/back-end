// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Users {
  Id          String    @id @default(uuid())
  FirstName   String    @db.VarChar(100)
  LastName    String    @db.VarChar(100)
  Email       String    @unique @db.VarChar(50)
  PhoneNumber String    @db.VarChar(20)
  CreatedDate DateTime  @db.Timestamp()
  FinalDate   DateTime?
  State       Int       @default(1)

  Accounts  Accounts[]
  Addresses Addresses[]
}

model Addresses {
  Id          String    @id @default(uuid())
  UserId      String    @db.VarChar(100)
  Country     String    @db.VarChar(150)
  Province    String    @db.VarChar(150)
  Location    String    @db.VarChar(150)
  Street      String    @db.VarChar(100)
  Number      String    @db.VarChar(50)
  Between     String    @db.VarChar(100)
  CreatedDate DateTime  @db.Timestamp()
  FinalDate   DateTime?
  State       Int       @default(1)

  User        Users      @relation(fields: [UserId], references: [Id])
}

model Accounts {
  Id             String    @id @default(uuid())
  UserId         String    @db.VarChar(100)
  RoleId         String    @db.VarChar(100)
  UserName       String    @unique @db.VarChar(100)
  UserPass       String    @db.VarChar(100)
  CreatedDate    DateTime  @db.Timestamp()
  EmailValidated Boolean   @default(false)
  FinalDate      DateTime?
  State          Int       @default(1)

  AccountMenu AccountMenus[]

  User Users @relation(fields: [UserId], references: [Id])
  Role Roles @relation(fields: [RoleId], references: [Id])

  accountMenuItem AccountMenuItem[]  
  sessions  Session[]
}

model Roles {
  Id          String    @id @default(uuid())
  Name        String    @unique @db.VarChar(100)
  Description String?   @db.VarChar(100)
  CreatedDate DateTime  @db.Timestamp()
  FinalDate   DateTime?
  State       Int       @default(1)

  Accounts Accounts[]
}

model Provinces {
  Id          String    @id @default(uuid())
  CountryId   String    @db.VarChar(100)
  Name        String    @db.VarChar(100)
  Description String?   @db.VarChar(100)
  CreatedDate DateTime  @db.Timestamp()
  FinalDate   DateTime?
  State       Int       @default(1)
}

model PaymentTypes {
  Id          String    @id @default(uuid())
  Name        String    @unique @db.VarChar(100)
  Description String?   @db.VarChar(100)
  CreatedDate DateTime  @db.Timestamp()
  FinalDate   DateTime?
  State       Int       @default(1)
}

model Contacts {
  id          String    @id @default(uuid())
  fullName    String    @db.VarChar(100)
  email       String    @db.VarChar(50)
  phone       String    @db.VarChar(20)
  description String?   @db.VarChar(250)
  completedAt DateTime? @db.Timestamp()
  CreatedDate DateTime  @db.Timestamp()
  State       Int       @default(1)
}

model Menues {
  Id          String    @id @default(uuid())
  Position    Int       @default(0)
  Name        String    @unique @db.VarChar(100)
  Url         String    @unique @db.VarChar(100)
  HasSubMenu  Boolean
  Description String    @db.VarChar(100)
  CreatedDate DateTime  @db.Timestamp()
  FinalDate   DateTime?
  State       Int       @default(1)

  AccountMenu AccountMenus[]
  SubMenu     SubMenues[]
}

model SubMenues {
  Id          String    @id @default(uuid())
  MenuId      String    @db.VarChar(100)
  Name        String    @unique @db.VarChar(100)
  Url         String    @unique @db.VarChar(100)
  Description String    @db.VarChar(100)
  CreatedDate DateTime  @db.Timestamp()
  FinalDate   DateTime?
  State       Int       @default(1)

  Menu Menues @relation(fields: [MenuId], references: [Id])

  accountMenuItem AccountMenuItem[]
}

model AccountMenus {
  Id          String    @id @default(uuid())
  MenuId      String    @db.VarChar(100)
  AccountId   String    @db.VarChar(100)
  CreatedDate DateTime  @db.Timestamp()
  FinalDate   DateTime?
  State       Int       @default(1)
  Account     Accounts  @relation(fields: [AccountId], references: [Id])
  Menu        Menues    @relation(fields: [MenuId], references: [Id])

  accountMenuItem AccountMenuItem[]
}

model AccountMenuItem {
  Id           String   @id @default(cuid())
  AccountId       String
  SubMenuId   String
  AccountMenuId   String

  // Relaciones
  account     Accounts  @relation(fields: [AccountId], references: [Id])
  subMenue    SubMenues @relation(fields: [SubMenuId], references: [Id])
  accountMenu AccountMenus @relation(fields: [AccountMenuId], references: [Id])

  
  // Account     Accounts  @relation(fields: [AccountId], references: [Id])
  // Menu        Menues    @relation(fields: [MenuId], references: [Id])
}

model Categories {
  Id          String    @id @default(uuid())
  Name        String    @unique @db.VarChar(100)
  Description String?   @db.VarChar(100)
  CreatedDate DateTime  @db.Timestamp()
  FinalDate   DateTime?
  State       Int       @default(1)

  SubCategory SubCategories[]
}

model SubCategories {
  Id          String    @id @default(uuid())
  CategoryId  String    @db.VarChar(100)
  Name        String    @db.VarChar(100)
  Description String?   @db.VarChar(100)
  CreatedDate DateTime  @db.Timestamp()
  FinalDate   DateTime?
  State       Int       @default(1)

  Category Categories @relation(fields: [CategoryId], references: [Id])

  Product Products[]
}

model Presentations {
  Id          String    @id @default(uuid())
  Name        String    @unique @db.VarChar(100)
  Description String?   @db.VarChar(500)
  CreatedDate DateTime  @db.Timestamp()
  FinalDate   DateTime?
  State       Int       @default(1)

  Product Products[]
}

model Suppliers {
  Id          String    @id @default(uuid())
  CompanyName String    @db.VarChar(100)
  Address     String    @db.VarChar(100)
  Email       String?   @unique @db.VarChar(50)
  Phone       String?   @db.VarChar(20)
  Web         String?   @db.VarChar(120)
  CreatedDate DateTime  @db.Timestamp()
  FinalDate   DateTime?
  State       Int       @default(1)

  Product Products[]
}

model Products {
  Id             String    @id @default(uuid())
  SubCategoryId  String    @db.VarChar(100)
  PresentationId String    @db.VarChar(100)
  SupplierId     String    @db.VarChar(100)
  Name           String    @unique @db.VarChar(50)
  ImageUrl       String?   @db.VarChar(200)
  PublicIdUrl    String?   @db.VarChar(200)
  Description    String?   @db.VarChar(120)
  CreatedDate    DateTime  @db.Timestamp()
  FinalDate      DateTime?
  State          Int       @default(1)

  SubCategory  SubCategories @relation(fields: [SubCategoryId], references: [Id])
  Presentation Presentations @relation(fields: [PresentationId], references: [Id])
  Supplier     Suppliers     @relation(fields: [SupplierId], references: [Id])

  lots Lots[]
}

model Lots {
  Id             String    @id @default(uuid())
  ProductId      String    @db.VarChar(100)
  LotCode        String    @db.VarChar(100)
  ProductCode    String    @unique @db.VarChar(50)
  ExpiredDate    DateTime?
  HasExpiredDate Boolean
  stock          BigInt
  PurchasePrice  Decimal
  SalePrice      Decimal
  CreatedDate    DateTime  @db.Timestamp()
  FinalDate      DateTime?
  State          Int       @default(1)

  Product Products @relation(fields: [ProductId], references: [Id])
}
model Session {
  Id           String   @id @default(cuid())
  AccountId       String
  token        String   @unique
  expiresAt    DateTime
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  account         Accounts     @relation(fields: [AccountId], references: [Id])
}